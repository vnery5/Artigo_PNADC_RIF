geom_flow(aes(fill=cor),aes.flow="backward", min.y = 0.01, curve_type = "sine") +
geom_stratum(width = 1/2, fill = "white", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Educação", "Tempo\nDesocupado"),
expand = c(.05, .05))
## Gráfico ####
# Ideia: ver a persistência da desocupação por grau de educação e cor/etnia
df_group %>%
ggplot(aes(y=freq, axis1=grau_educacao, axis2=tempo_desocupacao)) +
geom_flow(aes(fill=cor),aes.flow="backward", curve_type = "sine") +
geom_stratum(width = 1/2, fill = "white", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Educação", "Tempo\nDesocupado"),
expand = c(.05, .05))
library(ivreg)
install.packages("ivreg")
#para apagar todas as variáveis
rm(list = ls())
## Reading library and data
library(ivreg)
data("SchoolingReturns", package = "ivreg")
## Fitting a standard OLS
## Fitting a standard OLS
formula = log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south
m_ols <- lm(formula, data = SchoolingReturns)
summary(m_ols)
## Remember: when using IV, the reduced equations of the endougenous variables
## containg ALL of the exougenous variables (as they are the linear combination
## most correlated with the endougenous variable)
# In the formula, ethinicty, smsa and south serve as instruments for themselves
m_iv <- ivreg(log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south |
nearcollege + poly(age, 2) + ethnicity + smsa + south,
data = SchoolingReturns)
## Alternatively, we can divide the formula in
# Exogeneous variables | endogenous variables | instruments
m_iv1 <- ivreg(log(wage) ~ ethnicity + smsa + south | education + poly(experience, 2) |
nearcollege + poly(age, 2), data = SchoolingReturns)
install.packages("modelsummary")
library(modelsummary)
m_list <- list(OLS = m_ols, IV = m_iv)
msummary(m_list)
modelplot(m_list, coef_omit = "Intercept|experience")
## Reading library and data
library(ivreg)
data("SchoolingReturns", package = "ivreg")
## Fitting a standard OLS: returns to education are ≈ 7,4% on average.
# Other controls: quadratic experience and dummies for ethinicity, residency in a city and in the south
formula = log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south
m_ols <- lm(formula, data = SchoolingReturns)
summary(m_ols)
## However, education is most DEFINITELY correlated with unobserved terms
## To deal with that, we can use instruments!
## As experience is defined as potential experience (age - educ - 6), it is
## also correlated with unobserved terms
## Remember: when using IV, the reduced equations of the endougenous variables
## containg ALL of the exougenous variables (as they are the linear combination
## most correlated with the endougenous variable)
# In the formula, ethinicty, smsa and south serve as instruments for themselves
m_iv <- ivreg(log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south |
nearcollege + poly(age, 2) + ethnicity + smsa + south,
data = SchoolingReturns)
## Alternatively, we can divide the formula in
# Exogeneous variables | endogenous variables | instruments
m_iv1 <- ivreg(log(wage) ~ ethnicity + smsa + south | education + poly(experience, 2) |
nearcollege + poly(age, 2), data = SchoolingReturns)
## Comparing the results, we see that returns to education increased a lot
library(modelsummary)
m_list <- list(OLS = m_ols, IV = m_iv)
msummary(m_list)
modelplot(m_list, coef_omit = "Intercept|experience")
## Reading library and data
library(ivreg)
data("SchoolingReturns", package = "ivreg")
## Fitting a standard OLS: returns to education are ≈ 7,4% on average.
# Other controls: quadratic experience and dummies for ethinicity, residency in a city and in the south
formula = log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south
m_ols <- lm(formula, data = SchoolingReturns)
summary(m_ols)
## However, education is most DEFINITELY correlated with unobserved terms
## To deal with that, we can use instruments!
## As experience is defined as potential experience (age - educ - 6), it is
## also correlated with unobserved terms
## Remember: when using IV, the reduced equations of the endougenous variables
## containg ALL of the exougenous variables (as they are the linear combination
## most correlated with the endougenous variable)
# In the formula, ethinicty, smsa and south serve as instruments for themselves
m_iv <- ivreg(log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south |
nearcollege + poly(age, 2) + ethnicity + smsa + south,
data = SchoolingReturns)
## Alternatively, we can divide the formula in
# Exogeneous variables | endogenous variables | instruments
m_iv1 <- ivreg(log(wage) ~ ethnicity + smsa + south | education + poly(experience, 2) |
nearcollege + poly(age, 2), data = SchoolingReturns)
## Comparing the results, we see that returns to education increased a lot
library(modelsummary)
m_list <- list(OLS = m_ols, IV = m_iv)
msummary(m_list)
modelplot(m_list, coef_omit = "Intercept|experience")
summary(m_iv, diagnostics=T)
#para apagar todas as variáveis
rm(list = ls())
# Clear plots
dev.off()
# Clear console
cat("\014")
## mudando o diretório (caso seja necessário)
getwd()
## Para comparação, aqui estima-se a decomposição da renda media da amostra entre 2012 e 2015
df1215 <- df[df$Ano %in% c(2012,2015),]
library(survey) # uso e modelos de dados de pesquisas amostrais (com pesos pós-estratificados e correção de variância)
library(convey)
library(PNADcIBGE) # leitura de dados da PNADC
library(tidyverse) # manipulação de dados
library(magrittr)
library(ggpubr)
library(ggdist)
library(reshape2)
library(psych) # describe (instead of summary)
library(oaxaca) #oaxaca-blinder
library(dineq) # regressões RIF
library(DescTools) # weighted gini
library(foreign) # exporting to dta
library(stargazer) # for tables
library(sandwich) # for robust SEs
library(performance)
library(reldist)
setwd("/Users/vinicius/Desktop/Artigos/PET/Artigo_PNADC_RIF/PNADC")
# variáveis a serem lidas
vars <- c("Ano","Trimestre","UF","UPA","Estrato","V1027","V1028","V1029","posest",
"V1008","V1014","V1022","V2001","V2003","V2005","V2007","V2009","V2010",
"VD2002","VD2003","VD3004","VD3005","VD3006","VD4001","VD4002","VD4003",
"VD4005","VD4008","VD4009","VD4010","VD4016","VD4017","VD4019",
"VD4020","VD4031","VD4035","VD4036","VD4037")
## lendo os dados
# Anos específicos (2012, 2015, 2020, 2021)
# Fonte: https://www.ibge.gov.br/estatisticas/sociais/trabalho/17270-pnad-continua.html?=&t=downloads
nums <- c(2, 3, 4)
data <- c("PNADC_012012_20211130.zip","PNADC_012015_20211130.zip",
"PNADC_012020_20211130.zip","PNADC_012021_20211130.zip")
ler_pnad <- function(){
print(1)
df1 <- read_pnadc(microdata = unz(data[1]), input = "input_PNADC_trimestral.txt", vars = vars)
for (i in nums){
## lendo os dados
print(i)
df2 <- read_pnadc(microdata = unz(data[i]), input = "input_PNADC_trimestral.txt", vars = vars)
# unindo vários dfs
print("Unindo...")
df1 <- rbind(df1,df2)
}
return(df1)
}
df <- ler_pnad()
ler_pnad <- function(){
print(1)
df1 <- read_pnadc(microdata = unzip(data[1]), input = "input_PNADC_trimestral.txt", vars = vars)
for (i in nums){
## lendo os dados
print(i)
df2 <- read_pnadc(microdata = unzip(data[i]), input = "input_PNADC_trimestral.txt", vars = vars)
# unindo vários dfs
print("Unindo...")
df1 <- rbind(df1,df2)
}
return(df1)
}
df <- ler_pnad()
nums <- c(2, 3, 4)
data_compressed <- c("PNADC_012012_20211130.zip","PNADC_012015_20211130.zip",
"PNADC_012020_20211130.zip","PNADC_012021_20211130.zip")
data <- c("PNADC_012012.txt","PNADC_012015_20211130.txt",
"PNADC_012020_20211130.txt","PNADC_012021_20211130.txt")
ler_pnad <- function(){
print(1)
df1 <- read_pnadc(microdata = unz(data_compressed[1], data[1]),
input = "input_PNADC_trimestral.txt", vars = vars)
for (i in nums){
## Lendo os dados
print(i)
df2 <- read_pnadc(microdata = unz(data_compressed[i], data[i]),
input = "input_PNADC_trimestral.txt", vars = vars)
# Unindo os dfs
print("Unindo...")
df1 <- rbind(df1,df2)
}
return(df1)
}
df <- ler_pnad()
data_compressed <- c("PNADC_012012_20211130.zip","PNADC_012015_20211130.zip",
"PNADC_012020_20211130.zip","PNADC_012021_20211130.zip")
data <- c("PNADC_012012.txt","PNADC_012015.txt",
"PNADC_012020.txt","PNADC_012021.txt")
df <- ler_pnad()
ler_pnad <- function(){
print(1)
df1 <- read_pnadc(microdata = data[1],
input = "input_PNADC_trimestral.txt", vars = vars)
for (i in nums){
## Lendo os dados
print(i)
df2 <- read_pnadc(microdata = data[i],
input = "input_PNADC_trimestral.txt", vars = vars)
# Unindo os dfs
print("Unindo...")
df1 <- rbind(df1,df2)
}
return(df1)
}
df <- ler_pnad()
# Salvando memória
df$UPA <- as.integer(df$UPA)
df$V1008 <- as.integer(df$V1008)
df$V1014 <- as.integer(df$V1014)
df$V2003 <- as.integer(df$V2003)
# Criando ids de domicílios e indivíduos
df$iddom <- as.double(paste(df$UPA, df$V1008, df$V1014, sep = ""))
df$idind <- as.double(paste(df$UPA, df$V1008, df$V1014, df$V2003, sep = ""))
# criando coluna de data
df$Trimestre <- as.integer(df$Trimestre)
df$Ano <- as.integer(df$Ano)
df$data <- as.integer(df$Trimestre*10000 + df$Ano)
## 2021 (e principalmente 2021) tem um número bem menor de observações
## e uma "taxa de participação" bem menor (2021: < 40%);
## 2021 tem 320.000 observações e 120.000 que trabalham; muito menor que ambos
## 2021 tem tanto um número bem menor de observações quanto uma taxa de "participação" menor
table(df$Ano)
table(df$Ano[!is.na(df$VD4019)])
table(df$Ano[!is.na(df$VD4019)])/table(df$Ano)
################## Manipulações Gerais ##############
# para acessar várias colunas
select(df, iddom, idind)
# para mudar o tipo de uma coluna  (aqui, anos de educação)
table(df$VD3005)  #value_counts
df$educ <- as.integer(df$VD3005)
typeof(df$educ)
df$VD3005 <- NULL
## Criando educ^2, ^3 e ^4
df$educ2 <- as.integer(df$educ**2)
df$educ3 <- as.integer(df$educ**3)
df$educ4 <- as.integer(df$educ**4)
## deflacionando (usando o CO1 para termos reais do último ano (2021))
df <- pnadc_deflator(df, "deflator_PNADC_2021_trimestral_070809.xls")
# deflacionando rendimentos habituais
df$VD4019 <- df$VD4019*df$Habitual
# deflacionando rendimentos efetivos
df$VD4020 <- df$VD4020*df$Efetivo
# mudando o tipo da variável de condição no domicilio
df$V2005 <- as.integer(df$V2005)
## ordenando o dataframe
df <- arrange(df, iddom, Ano, V2005)
## dummy de filho e filho na primeira infância
df$filho <-  ifelse(df$V2005 %in% c(4,5,6), 1, 0)
#se tem idade <= 5 e tá nas condições de filho
df$filho05 <-  ifelse(df$V2009 <= 5 & df$V2005 %in% c(4,5,6), 1, 0)
## calculando o total de filhos
# somar filhos agrupando por iddom e data
df$num.filhos <- ave(df$filho, df$iddom, df$data, FUN = sum)
df$num.filhos05 <- ave(df$filho05, df$iddom, df$data, FUN = sum)
## deixando os valores apenas para chefes e conjugues
df$num.filhos <- ifelse(df$V2005 > 3, 0, df$num.filhos)
df$num.filhos05 <- ifelse(df$V2005 > 3, 0, df$num.filhos05)
## a maioria da amostra (66,5%) não possui filhos; o máximo que temos é de TREZE filhos!
table(df$num.filhos)
# removendo as colunas de filhos
df$filho <- NULL
df$filho05 <- NULL
# a mediana de renda habitual é de 1.328,70, sendo que não há valores iguais a 0
# na amostra como um todo, o máximo auferido foi de R$ 300.000 e 40,33% possuem rendimento do trabalho
summary(df[, c("VD4019", "VD4020")])
summary(df[, c("VD4031", "VD4035")])
## renda por hora (VD4031 e VD4035 são horas por semana)
# arrumando caso haja uma hora efetiva = 0
# table(df$VD4035)
# df$VD4035 <- ifelse(df$VD4035 < 1, 1, df$VD4035)
df$sal.hab.hora <- df$VD4019/(df$VD4031*365/(7*12))
df$sal.efet.hora <- df$VD4020/(df$VD4035*365/(7*12))
df$sal.efet.hora <- ifelse(is.infinite(df$sal.efet.hora), NA, df$sal.efet.hora)
summary(df[,c("sal.hab.hora", "sal.efet.hora")])
## renda domiciliar (de todos os trabalhos)
df$renda.trab.hab.dom <- ave(df$VD4019, df$iddom, df$data, FUN = function(x) sum(x, na.rm = TRUE))
df$renda.hab.dom.pc <- df$renda.trab.hab.dom/df$VD2003
## renomeando e logaritmizando
# Habitual
names(df)[names(df) == 'VD4019'] <- 'sal.hab'
df$lsal <- log(df$sal.hab)
df$lsalh <- log(df$sal.hab.hora)
# Efetivo
names(df)[names(df) == 'VD4020'] <- 'sal.efet'
df$lsal.efet <- log(df$sal.efet)
df$lsal.efet[which(!is.finite(df$lsal.efet) & !is.na(df$lsal.efet))] <- 0
df$lsalh.efet <- log(df$sal.efet.hora)
df$lsalh.efet[which(!is.finite(df$lsalh.efet) & !is.na(df$lsalh.efet))] <- 0
summary(df[,c("sal.efet", "lsal.efet","sal.efet.hora","lsalh.efet")])
## idade e experiencia minceriana
names(df)[names(df) == 'V2009'] <- 'idade'
df$idade <- as.integer(df$idade)
df$exper <- as.integer(ifelse(df$educ < 9, df$idade - 15, df$idade - df$educ - 6))
df$exper <- ifelse(df$exper < 0, 0, df$exper)
## Criando exper2,exper3, exper4
df$exper2 <- as.integer(df$exper**2)
df$exper3 <- as.integer(df$exper**3)
df$exper4 <- as.integer(df$exper**4)
#### Variáveis Categóricas ####
## criando a dummy de casado
# criando uma coluna "atrasada"
df$V2005 <- as.integer(df$V2005)
df <- df %>%
mutate(V2005_1 = lead(V2005))
# ifelse para criar a dummy
# se for casado (2,3) ou é chefe de domicílio (1) com conjugue (2,3)
df$casado <- ifelse(df$V2005 %in% c(2,3) | (df$V2005 == 1 & df$V2005_1 %in% c(2,3)), 1, 0)
# vendo os resultados
select(df, iddom, idind, data, V2005, V2005_1, casado)
# removendo a coluna auxiliar
df$V2005_1 <- NULL
## dummy de chefe de domicílio
df$chefe.dom <- ifelse(df$V2005 == 1, 1, 0)
## rural
names(df)[names(df) == 'V1022'] <- 'rural'
# substituindo
df$rural[df$rural == 2] <- 'rural'
df$rural[df$rural == 1] <- 'urbano'
# colocando como fator
df$rural <- factor(df$rural)
# vendo os totais: 73% da amostra é urbana
table(df$rural)/nrow(df)
## região
df$UF <- as.integer(df$UF)
index <- c(1,2,3,4,5)
subs <- c("N","NE","SE","S","CO")
df$regiao <- subs[floor(df$UF/10)]
# colocando como fator (CO como base)
df$regiao <- factor(df$regiao)
contrasts(df$regiao)
# vendo os totais: 33% da amostra é do nordeste!
table(df$regiao)/nrow(df)
## gênero
names(df)[names(df) == 'V2007'] <- 'sexo'
# substituindo
df$sexo[df$sexo == 2] <- 'feminino'
df$sexo[df$sexo == 1] <- 'masculino'
# colocando como fator (homem como base)
df$sexo <- factor(df$sexo)
# vendo os totais: amostra bem equilibrada
table(df$sexo)/nrow(df)
## cor
names(df)[names(df) == 'V2010'] <- 'cor'
index <- c(1, 2, 3, 4, 5, 9)
subs <- c('branca','preta','amarela','parda','indigena',NA)
# substituindo
for (i in index) {
ifelse(i == 9,
df$cor[df$cor == 9] <- NA,
df$cor[df$cor == i] <- subs[i]
)
}
# colocando como fator
df$cor <- factor(df$cor)
# vendo os totais:
# amarela: 0,3%; indigena: 0,3%
# branca: 40%; parda: 51%; preta: 7,5%
table(df$cor)/nrow(df)
# criando uma coluna ppi/branco
df$cor2 <- ifelse(
df$cor == 'branca' | df$cor == 'amarela',
'branca',
'ppi'
)
# colocando como fator
df$cor2 <- factor(df$cor2)
# vendo os totais: ppi são 59,42% da amostra
table(df$cor2)/nrow(df)
## grau de educação
names(df)[names(df) == 'VD3004'] <- 'grau.educ'
index <- c(1,2,3,4,5,6,7)
subs <- c('si','fund.inc','fund.comp','med.inc','med.comp','sup.inc','sup.comp')
# substituindo
for (i in index) {
df$grau.educ[df$grau.educ == i] <- subs[i]
}
# colocando como fator
df$grau.educ <- factor(df$grau.educ)
# vendo o grupo base
contrasts(df$grau.educ)
# alterando o grupo base (para si)
df <- df %>%
mutate(grau.educ = relevel(grau.educ, ref = "si"))
contrasts(df$grau.educ)
# vendo os totais: 54% da amostra tem ≤ fund. completo; 30% tem >= med comp.
table(df$grau.educ)/nrow(df)*100
## ocupação
names(df)[names(df) == 'VD4009'] <- 'pos.ocupacao'
df$pos.ocupacao <- as.integer(df$pos.ocupacao)
index <- c(1:10)
subs <- c('formal.priv','informal.priv','formal.dom','informal.dom','formal.pub','informal.pub','militar','empregador','conta.propria','familiar')
# substituindo
for (i in index) {
df$pos.ocupacao[df$pos.ocupacao == i] <- subs[i]
}
# colocando como fator
df$pos.ocupacao <- factor(df$pos.ocupacao)
contrasts(df$pos.ocupacao)
# alterando o grupo base (para formal público)
df <- df %>%
mutate(pos.ocupacao = relevel(pos.ocupacao, ref = "formal.pub"))
contrasts(df$pos.ocupacao)
typeof(df$pos.ocupacao)
## formalidade
df$formalidade <- ifelse(
df$pos.ocupacao %in% c('formal.priv','formal.dom','formal.pub','militar','empregador'),
'formal',
'informal'
)
# colocando como fator
df$formalidade <- factor(df$formalidade)
# alterando o grupo base (para informal)
df <- df %>%
mutate(formalidade = relevel(formalidade, ref = "informal"))
contrasts(df$formalidade)
## setor e setor simplificado
names(df)[names(df) == 'VD4010'] <- 'setor'
df$setor <- as.integer(df$setor)
df$setor.simp <- df$setor
index <- c(1:12)
subs <- c('agro','industria','construcao','comercio','transporte','aloj.alim','servicos.fin','adm.publica','educ.saude','outros.servicos','servicos.domesticos','ativ.mal.definidas')
subs.simp <- c('agro','industria','construcao','servicos','servicos','servicos','servicos','servicos','servicos','servicos','servicos','servicos')
# substituindo
for (i in index) {
df$setor[df$setor == i] <- subs[i]
df$setor.simp[df$setor.simp == i] <- subs.simp[i]
}
# colocando como fator (adm.publica como base)
df$setor <- factor(df$setor)
## desocupados, desalentados e força de trabalho
df$VD4001[df$VD4001 == 1] <- "dentro.ft"
df$VD4001[df$VD4001 == 2] <- "fora.ft"
df$VD4001 <- factor(df$VD4001)
df$VD4002[df$VD4002 == 1] <- "ocupado"
df$VD4002[df$VD4002 == 2] <- "desocupado"
df$VD4002 <- factor(df$VD4002)
df$VD4003[df$VD4003 == 1] <- "fora.ft.dentro.ft.potencial"
df$VD4003[df$VD4003 == 2] <- "fora.ft.fora.ft.potencial"
df$VD4003 <- factor(df$VD4003)
#### Data para Objeto Survey e para o Stata ####
## selecionado apenas as colunas que vamos usar
uteis <- c('Ano','UPA','Estrato','posest','idade','V1027','V1028','V1029','sexo',
'cor','cor2','sal.hab','sal.hab.hora','lsal','lsalh','renda.hab.dom.pc',
'V2005','VD4001','VD4002','VD4003','setor','setor.simp','pos.ocupacao',
'formalidade','grau.educ','regiao','rural','chefe.dom', 'casado',
'num.filhos','num.filhos05','idind','iddom', 'VD4031', 'VD4035',
'sal.efet','sal.efet.hora','lsal.efet','lsalh.efet',
'educ','educ2','educ3','educ4','exper','exper2','exper3','exper4'
)
df <- df[,uteis]
## mudando alguns nomes e reordenando
df <- arrange(df, Ano)
names(df)[names(df) == 'cor'] <- 'Cor'
names(df)[names(df) == 'cor2'] <- 'Cor2'
names(df)[names(df) == 'sexo'] <- 'Sexo'
df$Cor.Sexo <- paste(df$Cor, df$Sexo, sep = ".")
df$Cor2.Sexo <- paste(df$Cor2, df$Sexo, sep = ".")
## identificando os anos na UPA, posest e Estrato
df$posest <- as.character(paste(df$Ano,df$posest, sep = ""))
df$UPA <- as.character(paste(df$Ano,df$UPA, sep = ""))
df$Estrato <- as.character(paste(df$Ano,df$Estrato, sep = ""))
## criando o objeto
df.svy <- pnadc_design(df)
# df.svy <- convey_prep(df.svy)
## Exportando para dta
# write.dta(df, "df_pnad_pet.dta")
## Restringindo a subpopulação de interesse usando o subset
# o que isso faz: torna os pesos das observações não desejadas iguais a 0 (e as probs = inf),
# o que permite calcular as variâncias corretamente (dropar é errado!)
df.svy <- subset(df.svy, idade >= 15 & idade < 65 & !is.na(sal.hab) & !is.na(Cor))
## droppando as observações do df original
## usando o df apenas com as observações em idade ativa (15 a 64) e com renda do trabalho não-nula
# de 1.947.690 obs, caimos para 756.540 e para 463.137 domicilios
df <- df[df$idade >= 15 & df$idade < 65 & !is.na(df$sal.hab) & !is.na(df$Cor), ]
length(unique(df$iddom))
table(df$Ano)
summary(df[, c("sal.efet.hora","lsalh.efet")])
## Pegando os pesos amostrais (V1028)
df$pesos <- weights(df.svy)[weights(df.svy) > 0]
# vendo o tempo que demorou o código
T1 <- Sys.time() - t1
T1
# Lembrando: os pesos são pós-estratificados (V1028) e a probabilidade de
# uma pessoa de uma pessoa na amostra é Prob  = 1 / Peso
select(df, pesos, V1028)
medias <- df %>%
group_by(Ano) %>%
summarise(
"Renda.Hab" = weighted.mean(sal.hab, pesos),
"log(Renda Hab.)" = weighted.mean(lsal, pesos),
"Renda.Hab.Hora" = weighted.mean(sal.hab.hora, pesos),
"log(Renda Hab./Hora)" = weighted.mean(lsalh, pesos),
"Renda.Efet" = weighted.mean(sal.efet, pesos),
"log(Renda Efet.)" = weighted.mean(lsal.efet, pesos),
"Renda.Efet.Hora" = weighted.mean(sal.efet.hora[!is.na(sal.efet.hora)],
pesos[!is.na(sal.efet.hora)]),
"log(Renda Efet./Hora)" = weighted.mean(lsalh.efet[!is.na(lsalh.efet)],
pesos[!is.na(lsalh.efet)]),
"Educação" = weighted.mean(educ, pesos),
"Experiência Potencial" = weighted.mean(exper, pesos)
) %>%
t() %>% # transpondo
as.data.frame() %>% # colocando como df normal (e não grouped)
mutate(across(everything(), round, 2)) # arredondando
## deixando os anos no cabeçalho e excluindo a sua linha
names(medias) <- medias[1,]
medias <- medias[-1,]
medias
