expand = c(.05, .05))
## Gráfico ####
# Ideia: ver a persistência da desocupação por grau de educação e cor/etnia
df_group %>%
ggplot(aes(y=freq, axis1=cor, axis2=grau_educacao, axis3=tempo_desocupacao)) +
geom_flow(aes(fill=cor),aes.flow="backward", min.y = 0.01) +
geom_stratum(width = 1/2, fill = "white", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Cor", "Educação", "Tempo\nDesocupado"),
expand = c(.05, .05))
## Gráfico ####
# Ideia: ver a persistência da desocupação por grau de educação e cor/etnia
df_group %>%
ggplot(aes(y=freq, axis1=cor, axis2=grau_educacao, axis3=tempo_desocupacao)) +
geom_flow(aes(fill=cor),aes.flow="backward", min.y = 0.01, curve_type = "sine") +
geom_stratum(width = 1/2, fill = "white", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Cor", "Educação", "Tempo\nDesocupado"),
expand = c(.05, .05))
## Gráfico ####
# Ideia: ver a persistência da desocupação por grau de educação e cor/etnia
df_group %>%
ggplot(aes(y=freq, axis1=grau_educacao, axis2=tempo_desocupacao)) +
geom_flow(aes(fill=cor),aes.flow="backward", min.y = 0.01, curve_type = "sine") +
geom_stratum(width = 1/2, fill = "white", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Cor", "Educação", "Tempo\nDesocupado"),
expand = c(.05, .05))
## Gráfico ####
# Ideia: ver a persistência da desocupação por grau de educação e cor/etnia
df_group %>%
ggplot(aes(y=freq, axis1=grau_educacao, axis2=tempo_desocupacao)) +
geom_flow(aes(fill=cor),aes.flow="backward", min.y = 0.01, curve_type = "sine") +
geom_stratum(width = 1/2, fill = "white", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Educação", "Tempo\nDesocupado"),
expand = c(.05, .05))
## Gráfico ####
# Ideia: ver a persistência da desocupação por grau de educação e cor/etnia
df_group %>%
ggplot(aes(y=freq, axis1=grau_educacao, axis2=tempo_desocupacao)) +
geom_flow(aes(fill=cor),aes.flow="backward", curve_type = "sine") +
geom_stratum(width = 1/2, fill = "white", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Educação", "Tempo\nDesocupado"),
expand = c(.05, .05))
library(ivreg)
install.packages("ivreg")
#para apagar todas as variáveis
rm(list = ls())
## Reading library and data
library(ivreg)
data("SchoolingReturns", package = "ivreg")
## Fitting a standard OLS
## Fitting a standard OLS
formula = log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south
m_ols <- lm(formula, data = SchoolingReturns)
summary(m_ols)
## Remember: when using IV, the reduced equations of the endougenous variables
## containg ALL of the exougenous variables (as they are the linear combination
## most correlated with the endougenous variable)
# In the formula, ethinicty, smsa and south serve as instruments for themselves
m_iv <- ivreg(log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south |
nearcollege + poly(age, 2) + ethnicity + smsa + south,
data = SchoolingReturns)
## Alternatively, we can divide the formula in
# Exogeneous variables | endogenous variables | instruments
m_iv1 <- ivreg(log(wage) ~ ethnicity + smsa + south | education + poly(experience, 2) |
nearcollege + poly(age, 2), data = SchoolingReturns)
install.packages("modelsummary")
library(modelsummary)
m_list <- list(OLS = m_ols, IV = m_iv)
msummary(m_list)
modelplot(m_list, coef_omit = "Intercept|experience")
## Reading library and data
library(ivreg)
data("SchoolingReturns", package = "ivreg")
## Fitting a standard OLS: returns to education are ≈ 7,4% on average.
# Other controls: quadratic experience and dummies for ethinicity, residency in a city and in the south
formula = log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south
m_ols <- lm(formula, data = SchoolingReturns)
summary(m_ols)
## However, education is most DEFINITELY correlated with unobserved terms
## To deal with that, we can use instruments!
## As experience is defined as potential experience (age - educ - 6), it is
## also correlated with unobserved terms
## Remember: when using IV, the reduced equations of the endougenous variables
## containg ALL of the exougenous variables (as they are the linear combination
## most correlated with the endougenous variable)
# In the formula, ethinicty, smsa and south serve as instruments for themselves
m_iv <- ivreg(log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south |
nearcollege + poly(age, 2) + ethnicity + smsa + south,
data = SchoolingReturns)
## Alternatively, we can divide the formula in
# Exogeneous variables | endogenous variables | instruments
m_iv1 <- ivreg(log(wage) ~ ethnicity + smsa + south | education + poly(experience, 2) |
nearcollege + poly(age, 2), data = SchoolingReturns)
## Comparing the results, we see that returns to education increased a lot
library(modelsummary)
m_list <- list(OLS = m_ols, IV = m_iv)
msummary(m_list)
modelplot(m_list, coef_omit = "Intercept|experience")
## Reading library and data
library(ivreg)
data("SchoolingReturns", package = "ivreg")
## Fitting a standard OLS: returns to education are ≈ 7,4% on average.
# Other controls: quadratic experience and dummies for ethinicity, residency in a city and in the south
formula = log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south
m_ols <- lm(formula, data = SchoolingReturns)
summary(m_ols)
## However, education is most DEFINITELY correlated with unobserved terms
## To deal with that, we can use instruments!
## As experience is defined as potential experience (age - educ - 6), it is
## also correlated with unobserved terms
## Remember: when using IV, the reduced equations of the endougenous variables
## containg ALL of the exougenous variables (as they are the linear combination
## most correlated with the endougenous variable)
# In the formula, ethinicty, smsa and south serve as instruments for themselves
m_iv <- ivreg(log(wage) ~ education + poly(experience, 2) + ethnicity + smsa + south |
nearcollege + poly(age, 2) + ethnicity + smsa + south,
data = SchoolingReturns)
## Alternatively, we can divide the formula in
# Exogeneous variables | endogenous variables | instruments
m_iv1 <- ivreg(log(wage) ~ ethnicity + smsa + south | education + poly(experience, 2) |
nearcollege + poly(age, 2), data = SchoolingReturns)
## Comparing the results, we see that returns to education increased a lot
library(modelsummary)
m_list <- list(OLS = m_ols, IV = m_iv)
msummary(m_list)
modelplot(m_list, coef_omit = "Intercept|experience")
summary(m_iv, diagnostics=T)
#para apagar todas as variáveis
rm(list = ls())
# Clear plots
dev.off()
# Clear console
cat("\014")
## mudando o diretório (caso seja necessário)
getwd()
setwd("/Users/vinicius/Documents/IPEA/Curso IDP/Avaliação de Impacto de Políticas - World Bank/Códigos")
library(broom)
library(clusterPower)
library(estimatr)
library(fishmethods)
library(haven)
library(kableExtra)
library(MatchIt)
library(modelsummary)
library(pwr)
library(rddensity)
library(skimr)
library(texreg)
library(tidyverse)
library(openxlsx)
library(ggplot2)
library(estimatr)
library(car)
# library (RVA)
library(openxlsx)
dados  <- read.xlsx("./dados/DadosHISP.xlsx", sheet="data",colNames = TRUE)
df  <- read.xlsx("./dados/DadosHISP.xlsx", sheet="data",colNames = TRUE)
dados  <- read.xlsx("./Dados/DadosHISP.xlsx", sheet="data",colNames = TRUE)
df  <- read.xlsx("./Dados/DadosHISP.xlsx", sheet="data",colNames = TRUE)
setwd("/Users/vinicius/Documents/IPEA/Curso IDP/Avaliação de Impacto de Políticas - World Bank/")
dados  <- read.xlsx("./Dados/DadosHISP.xlsx", sheet="data",colNames = TRUE)
df  <- read.xlsx("./Dados/DadosHISP.xlsx", sheet="data",colNames = TRUE)
setwd("/Users/vinicius/Documents/IPEA/Curso IDP/Avaliação de Impacto de Políticas - World Bank/")
library(broom)
library(clusterPower)
library(estimatr)
library(fishmethods)
library(haven)
library(kableExtra)
library(MatchIt)
library(modelsummary)
library(pwr)
library(rddensity)
library(skimr)
library(texreg)
library(tidyverse)
library(openxlsx)
library(ggplot2)
library(estimatr)
library(car)
# library(RVA)
library(openxlsx)
library(readstata13)  # lê extensões.dta
dados  <- read.xlsx("./Dados/DadosHISP.xlsx", sheet="data",colNames = TRUE)
# Create data subset with only treatment localities
df_treat <- df %>%
filter(treatment_locality == 1)
ggplot(df_treat, aes(x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_density() +
labs(x = "Poverty Index")
test_density <- rdplotdensity(rdd = rddensity(df_treat$poverty_index, c = 58),
X = df_treat$poverty_index,
type = "both")
ggplot(df_treat, aes(y = enrolled, x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_point() +
labs(x = "Poverty Index", y = "Enrolled")
df_treat %>%
filter(round == 1) %>%
mutate(enrolled_lab = ifelse(enrolled == 1, "Enrolled", "Not Enrolled")) %>%
ggplot(aes(x = poverty_index, y = health_expenditures,
group = enrolled_lab, colour = enrolled_lab, fill = enrolled_lab)) +
geom_point(alpha = 0.03) +
geom_smooth(method = "lm") +
labs(x = "Poverty Index", y = "Health Expenditures") +
scale_colour_viridis_d("Enrollment:", end = 0.7) +
scale_fill_viridis_d("Enrollment:", end = 0.7) +
theme(legend.position="bottom")
df_treat <- df_treat %>%
mutate(poverty_index_c0 = poverty_index - 58)
out_rdd <- lm_robust(health_expenditures ~ poverty_index_c0 * enrolled +
age_hh + age_sp + educ_hh + educ_sp +
female_hh + indigenous + hhsize + dirtfloor +
bathroom + land + hospital_distance,
data = df_treat %>% filter(round == 1))
summary(out_rdd)
out_rdd_cubic <- lm_robust(health_expenditures ~ enrolled * poverty_index_c0 +
enrolled * I(poverty_index_c0^2) +
enrolled * I(poverty_index_c0^3) +
age_hh + age_sp + educ_hh + educ_sp +
female_hh + indigenous + hhsize + dirtfloor +
bathroom + land + hospital_distance,
data = df_treat %>% filter(round == 1))
summary(out_rdd_cubic)
out_rdd5 <- lm_robust(health_expenditures ~ enrolled * poverty_index_c0 +
age_hh + age_sp + educ_hh + educ_sp +
female_hh + indigenous + hhsize + dirtfloor +
bathroom + land + hospital_distance,
data = df_treat %>% filter(round == 1 &
abs(poverty_index_c0) <=5))
summary(out_rdd5)
ggplot(df_treat, aes(x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_density() +
labs(x = "Poverty Index")
test_density <- rdplotdensity(rdd = rddensity(df_treat$poverty_index, c = 58),
X = df_treat$poverty_index,
type = "both")
ggplot(df_treat, aes(y = enrolled, x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_point() +
labs(x = "Poverty Index", y = "Enrolled")
df_treat %>%
filter(round == 1) %>%
mutate(enrolled_lab = ifelse(enrolled == 1, "Enrolled", "Not Enrolled")) %>%
ggplot(aes(x = poverty_index, y = health_expenditures,
group = enrolled_lab, colour = enrolled_lab, fill = enrolled_lab)) +
geom_point(alpha = 0.03) +
geom_smooth(method = "lm") +
labs(x = "Poverty Index", y = "Health Expenditures") +
scale_colour_viridis_d("Enrollment:", end = 0.7) +
scale_fill_viridis_d("Enrollment:", end = 0.7) +
theme(legend.position="bottom")
setwd("/Users/vinicius/Documents/IPEA/Curso IDP/CodigosR/AulaRDD/")
library(openxlsx)
library(car)
library(ggplot2)
# install.packages("rddensity")
library(rddensity)
library(estimatr)
dados  <- read.xlsx("./Dados/DadosHISP.xlsx", sheet="data",colNames = TRUE)
dim(dados)
Mun_trat <- subset(dados, treatment_locality==1 )
dim(Mun_trat)
ggplot(Mun_trat, aes(x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_density() +
labs(x = "Indice de pobreza")
df_treat %>%
filter(round == 1) %>%
mutate(enrolled_lab = ifelse(enrolled == 1, "Enrolled", "Not Enrolled")) %>%
ggplot(aes(x = poverty_index, y = health_expenditures,
group = enrolled_lab, colour = enrolled_lab, fill = enrolled_lab)) +
geom_point(alpha = 0.03) +
geom_smooth(method = "lm") +
labs(x = "Poverty Index", y = "Health Expenditures") +
scale_colour_viridis_d("Enrollment:", end = 0.7) +
scale_fill_viridis_d("Enrollment:", end = 0.7) +
theme(legend.position="bottom")
ggplot(Mun_trat, aes(x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_density() +
labs(x = "Indice de pobreza")
test_density <- rdplotdensity(rdd = rddensity(Mun_trat$poverty_index, c = 58),
X = Mun_trat$poverty_index,
type = "both")
ggplot(Mun_trat, aes(y = enrolled, x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_point() +
labs(x = "Indice de pobreza", y = "Inscrito")
ggplot(Mun_trat.base, aes(x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_density() +
labs(x = "Indice de pobreza")
Mun_trat.base =subset(Mun_trat, round==0 )
dim(Mun_trat.base)
ggplot(Mun_trat.base, aes(x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_density() +
labs(x = "Indice de pobreza")
modrob.base = lm_robust(health_expenditures ~ poverty_index,
data = Mun_trat.base, clusters = locality_identifier )
summary(modrob.base)
modelo.base = lm(health_expenditures ~ poverty_index,
data = Mun_trat.base )
summary(modelo.base)
qqPlot(modelo.base, main="QQ Plot")
plot(Mun_trat.base$poverty_index, Mun_trat.base$predito) + abline(v=58)
plot(Mun_trat.base$poverty_index, Mun_trat.base$preditorob) + abline(v=58)
plot(Mun_trat.base$poverty_index, Mun_trat.base$predito) + abline(v=58)
plot(Mun_trat.base$poverty_index, Mun_trat.base$preditorob) + abline(v=58)
Mun_trat.base$pobre = ifelse(Mun_trat.base$poverty_index<=58,
Mun_trat.base$poverty_index - 58, 0)
Mun_trat.base$n?opobre = ifelse(Mun_trat.base$poverty_index>58,
Mun_trat.base$poverty_index - 58, 0)
Mun_trat.base$pobre = ifelse(Mun_trat.base$poverty_index<=58,
Mun_trat.base$poverty_index - 58, 0)
Mun_trat.base$predito = predict(modelo.base)
Mun_trat.base$pobre = ifelse(Mun_trat.base$poverty_index<=58,
Mun_trat.base$poverty_index - 58, 0)
Mun_trat.base$n?opobre = ifelse(Mun_trat.base$poverty_index>58,
Mun_trat.base$poverty_index - 58, 0)
modrddrob.base = lm_robust(health_expenditures ~ pobre + n?opobre + eligible,
data = Mun_trat.base, clusters = locality_identifier)
Mun_trat.base$naopobre = ifelse(Mun_trat.base$poverty_index>58,
Mun_trat.base$poverty_index - 58, 0)
modrddrob.base = lm_robust(health_expenditures ~ pobre + naopobre + eligible,
data = Mun_trat.base, clusters = locality_identifier)
summary(modrddrob.base)
Mun_trat.base$preditorob = predict(modrddrob.base, newdata = Mun_trat.base)
plot(Mun_trat.base$poverty_index, Mun_trat.base$preditorob) + abline(v=58)
modrdd.base = lm(health_expenditures ~ pobre + n?opobre + eligible,
data = Mun_trat.base)
modrdd.base = lm(health_expenditures ~ pobre + naopobre + eligible,
data = Mun_trat.base)
summary(modrdd.base)
Mun_trat.base$predito = predict(modrdd.base)
plot(Mun_trat.base$poverty_index, Mun_trat.base$predito) + abline(v=58)
qqPlot(modelo.base, main="QQ Plot")
plot(Mun_trat.base$poverty_index, Mun_trat.base$predito) + abline(v=58)
plot(Mun_trat.base$poverty_index, Mun_trat.base$predito) + abline(v=58)
esquerda = subset(Mun_trat.base , Mun_trat.base$poverty_index>55 & Mun_trat.base$poverty_index<=58)
direita  = subset(Mun_trat.base , Mun_trat.base$poverty_index>58 & Mun_trat.base$poverty_index<=61)
mean(direita$preditorob) - mean(esquerda$preditorob)
t.test(direita$preditorob , esquerda$preditorob)
mean(direita$health_expenditures) - mean(esquerda$health_expenditures)
t.test(direita$health_expenditures , esquerda$health_expenditures)
df_treat <- df %>%
filter(treatment_locality == 1)
ggplot(df_treat, aes(x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_density() +
labs(x = "Poverty Index")
test_density <- rdplotdensity(rdd = rddensity(df_treat$poverty_index, c = 58),
X = df_treat$poverty_index,
type = "both")
ggplot(df_treat, aes(y = enrolled, x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_point() +
labs(x = "Poverty Index", y = "Enrolled")
df_treat %>%
filter(round == 1) %>%
mutate(enrolled_lab = ifelse(enrolled == 1, "Enrolled", "Not Enrolled")) %>%
ggplot(aes(x = poverty_index, y = health_expenditures,
group = enrolled_lab, colour = enrolled_lab, fill = enrolled_lab)) +
geom_point(alpha = 0.03) +
geom_smooth(method = "lm") +
labs(x = "Poverty Index", y = "Health Expenditures") +
scale_colour_viridis_d("Enrollment:", end = 0.7) +
scale_fill_viridis_d("Enrollment:", end = 0.7) +
theme(legend.position="bottom")
ggplot(df_treat, aes(y = enrolled, x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_point() +
labs(x = "Poverty Index", y = "Enrolled")
df_treat %>%
filter(round == 1) %>%
mutate(enrolled_lab = ifelse(enrolled == 1, "Enrolled", "Not Enrolled")) %>%
ggplot(aes(x = poverty_index, y = health_expenditures,
group = enrolled_lab, colour = enrolled_lab, fill = enrolled_lab)) +
geom_point(alpha = 0.03) +
geom_smooth(method = "lm") +
labs(x = "Poverty Index", y = "Health Expenditures") +
scale_colour_viridis_d("Enrollment:", end = 0.7) +
scale_fill_viridis_d("Enrollment:", end = 0.7) +
theme(legend.position="bottom")
dados  <- read.xlsx("./Dados/DadosHISP.xlsx", sheet="data",colNames = TRUE)
dim(dados)
Mun_trat <- subset(dados, treatment_locality==1 )
dim(Mun_trat)
ggplot(Mun_trat, aes(x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_density() +
labs(x = "Indice de pobreza")
ggplot(Mun_trat, aes(y = enrolled, x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_point() +
labs(x = "Indice de pobreza", y = "Inscrito")
Mun_trat.base =subset(Mun_trat, round==0 )
dim(Mun_trat.base)
ggplot(Mun_trat.base, aes(x = poverty_index)) +
geom_vline(xintercept = 58) +
geom_density() +
labs(x = "Indice de pobreza")
modrob.base = lm_robust(health_expenditures ~ poverty_index,
data = Mun_trat.base, clusters = locality_identifier )
summary(modrob.base)
summary(modrob.base)
Mun_trat.base$preditorob = predict(modrob.base, newdata = Mun_trat.base)
modelo.base = lm(health_expenditures ~ poverty_index,
data = Mun_trat.base )
summary(modelo.base)
Mun_trat.base$predito = predict(modelo.base)
qqPlot(modelo.base, main="QQ Plot")
plot(Mun_trat.base$poverty_index, Mun_trat.base$predito) + abline(v=58)
plot(Mun_trat.base$poverty_index, Mun_trat.base$preditorob) + abline(v=58)
df_treat %>%
filter(round == 1) %>%
mutate(enrolled_lab = ifelse(enrolled == 1, "Enrolled", "Not Enrolled")) %>%
ggplot(aes(x = poverty_index, y = health_expenditures,
group = enrolled_lab, colour = enrolled_lab, fill = enrolled_lab)) +
geom_point(alpha = 0.03) +
geom_smooth(method = "lm") +
labs(x = "Poverty Index", y = "Health Expenditures") +
scale_colour_viridis_d("Enrollment:", end = 0.7) +
scale_fill_viridis_d("Enrollment:", end = 0.7) +
theme(legend.position="bottom")
df_treat <- df_treat %>%
mutate(poverty_index_c0 = poverty_index - 58)
out_rdd <- lm_robust(health_expenditures ~ poverty_index_c0 * enrolled +
age_hh + age_sp + educ_hh + educ_sp +
female_hh + indigenous + hhsize + dirtfloor +
bathroom + land + hospital_distance,
data = df_treat %>% filter(round == 1))
summary(out_rdd)
plot(Mun_trat.base$poverty_index, Mun_trat.base$predito) + abline(v=58)
plot(Mun_trat.base$poverty_index, Mun_trat.base$preditorob) + abline(v=58)
Mun_trat.base$pobre = ifelse(Mun_trat.base$poverty_index<=58,
Mun_trat.base$poverty_index - 58, 0)
Mun_trat.base$naopobre = ifelse(Mun_trat.base$poverty_index>58,
Mun_trat.base$poverty_index - 58, 0)
modrdd.base = lm(health_expenditures ~ pobre + naopobre + eligible,
data = Mun_trat.base)
summary(modrdd.base)
Mun_trat.base$predito = predict(modrdd.base)
plot(Mun_trat.base$poverty_index, Mun_trat.base$predito) + abline(v=58)
esquerda = subset(Mun_trat.base , Mun_trat.base$poverty_index>55 & Mun_trat.base$poverty_index<=58)
direita  = subset(Mun_trat.base , Mun_trat.base$poverty_index>58 & Mun_trat.base$poverty_index<=61)
mean(direita$preditorob) - mean(esquerda$preditorob)
t.test(direita$preditorob , esquerda$preditorob)
mean(direita$preditorob) - mean(esquerda$preditorob)
t.test(direita$preditorob , esquerda$preditorob)
out_rdd_cubic <- lm_robust(health_expenditures ~ enrolled * poverty_index_c0 +
enrolled * I(poverty_index_c0^2) +
enrolled * I(poverty_index_c0^3) +
age_hh + age_sp + educ_hh + educ_sp +
female_hh + indigenous + hhsize + dirtfloor +
bathroom + land + hospital_distance,
data = df_treat %>% filter(round == 1))
summary(out_rdd_cubic)
out_rdd <- lm_robust(health_expenditures ~ poverty_index_c0 * enrolled +
age_hh + age_sp + educ_hh + educ_sp +
female_hh + indigenous + hhsize + dirtfloor +
bathroom + land + hospital_distance,
data = df_treat %>% filter(round == 1))
summary(out_rdd)
out_rdd5 <- lm_robust(health_expenditures ~ enrolled * poverty_index_c0 +
age_hh + age_sp + educ_hh + educ_sp +
female_hh + indigenous + hhsize + dirtfloor +
bathroom + land + hospital_distance,
data = df_treat %>% filter(round == 1 &
abs(poverty_index_c0) <=5))
summary(out_rdd5)
# Variáveis a serem lidas
vars <- c("Ano","Trimestre","UF","UPA","Estrato","V1027","V1028","V1029","posest",
"V1008","V1014","V1022","V2001","V2003","V2005","V2007","V2009","V2010",
"VD2002","VD2003","VD3004","VD3005","VD3006","VD4001","VD4002","VD4003",
"VD4005","VD4008","VD4009","VD4010","VD4016","VD4017","VD4019",
"VD4020","VD4031","VD4035","VD4036","VD4037")
#### Pacotes e Diretório ####
library(survey) # uso e modelos de dados de pesquisas amostrais (com pesos pós-estratificados e correção de variância)
library(convey)
library(PNADcIBGE) # leitura de dados da PNADC
library(tidyverse) # manipulação de dados
library(magrittr)
library(ggpubr)
library(ggdist)
library(reshape2)
library(psych) # describe (instead of summary)
library(oaxaca) # oaxaca-blinder
library(dineq) # regressões RIF
library(DescTools) # weighted gini
library(foreign) # exporting to and reading .dta files
library(stargazer) # for cute tables
library(sandwich) # for robust SEs
library(performance)
library(reldist)
# Para apagar todas as variáveis
rm(list = ls())
# Limpar gráficos
dev.off()
# Limpar console
cat("\014")
## Mudando o diretório (caso seja necessário)
getwd()
setwd("/Users/vinicius/Desktop/Artigos/PET/Artigo_PNADC_RIF/PNADC")
t1 <- Sys.time()
